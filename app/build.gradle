buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        google()
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.lascenify.sunshine"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        //testInstrumentationRunner "com.example.android.sunshine.util.SunshineTestRunner"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "OPEN_WEATHER_API_KEY", apikeyProperties['OPEN_WEATHER_API_KEY'])
        multiDexEnabled true


    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.returnDefaultValues = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    dataBinding {
        enabled true
    }
    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'


    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
}

dependencies {
    def dagger_version = "2.27"
    def retrofit_version = '2.8.1'
    def fragment_version = "1.2.4"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'

    // preferences
    implementation 'androidx.preference:preference:1.1.1'

    implementation 'androidx.test:core-ktx:1.3.0-beta02'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    implementation 'androidx.test:runner:1.3.0-beta02'
    implementation 'androidx.annotation:annotation:1.1.0'

    //lifecycle
    kapt "androidx.lifecycle:lifecycle-compiler:2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.0-alpha02"
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation "android.arch.lifecycle:reactivestreams:1.1.1"

    // Room
    implementation "androidx.room:room-runtime:2.2.5"
    kapt "androidx.room:room-compiler:2.2.5"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:2.2.5"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:2.2.5"

    // JSON library Squareup Moshi
    implementation("com.squareup.moshi:moshi:1.9.2")
    implementation("com.squareup.moshi:moshi-kotlin:1.9.2")
    implementation 'com.squareup.retrofit2:converter-moshi:2.8.1'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.9.2'

    // Dagger
    api "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    api "com.google.dagger:dagger-android:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"


    // Material
    //implementation "com.google.android.material:material:1.2.0-alpha06"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.2.18"
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    //implementation "io.reactivex.rxjava3:rxjava:3.0.3"
    implementation 'androidx.arch.core:core-testing:2.1.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.8.1'

    // OkHttp3
    implementation("com.squareup.okhttp3:okhttp:4.6.0")
    testImplementation("com.squareup.okhttp3:mockwebserver:4.6.0")
    implementation 'org.conscrypt:conscrypt-android:2.4.0'
    // Stetho is a sophisticated debug bridge for Android applications
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'

    // Testing
    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.3.0-beta02'


    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.13'
    testImplementation 'androidx.test:core:1.2.0'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:3.3.1'
    testImplementation 'org.mockito:mockito-inline:2.13.0'

    // Debug Database Library
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'

    // JAX-B dependencies for JDK 9+
    kapt "com.sun.xml.bind:jaxb-core:2.3.0.1"
    kapt "javax.xml.bind:jaxb-api:2.4.0-b180830.0359"
    kapt "com.sun.xml.bind:jaxb-impl:2.3.2"
    annotationProcessor "com.sun.xml.bind:jaxb-core:2.3.0.1"
    annotationProcessor "javax.xml.bind:jaxb-api:2.4.0-b180830.0359"

    // Charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // API for places
    implementation "com.algolia:algoliasearch-android:3.27.0"

    // ViewPager2
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    // Dots for viewPager
    implementation 'com.tbuonomo.andrui:viewpagerdotsindicator:4.1.2'
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}
